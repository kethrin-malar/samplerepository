Example:(15,5,24,8,1)

mergeSort(0,4)
if(0<4){
mid=0+4/2=2
mergesort(0,2)--|recursive type
mergesort(3,4)--|
merge(0,2,4)

                        15 ,5, 24 ,8, 1   
                               |
ms(0,2)                         ms(3,4)              merge(0,2,4)
  |                                |

mid=(0+2)/2=1; 15,5,24              8,1      mid=(0+1)/2=0 
                                          |
                |
   15,5           24                    8    1                 
    |
15    5           |                       |
|
5,15              |                     1,8   (right) j<2    ----->i&&j comapare

      (left)    5, 15,24                     
      i<3


 while (i < n1 && j < n2) {
            if (leftList.get(i).getSource().compareTo(rightList.get(j).getSource()) <= 0) {
                flights.set(k++, leftList.get(i++));
            } else {
                flights.set(k++, rightList.get(j++));
            }
        }

n1=2-0+1=3;
n2=4-2=2;
leftList=(0,3);
rightList=(3,5);

i=0;j=0;k=left;

while(i<3 && j<2){
if(compare i && j <=0){
i<j i++ i will be increment;
else{
i>j;
}
 (left)    5, 15,24                 1,8   (right) j<2    next j will move on 8 compare 5,8.
      i<3  i                        j                    next j will be increment 15compare to 8


k=1,5,8,15,24

 while (i < n1) {
            flights.set(k++, leftList.get(i++));
        }

        while (j < n2) {
            flights.set(k++, rightList.get(j++));
        }the remaining element will i,j will be addded in sorted array list.